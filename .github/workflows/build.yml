name: Build Electron App

on:
  push:
    branches:
      - master

jobs:
  build-electron-app:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install dependencies
        run: npm install

      - name: Build Electron App for Windows
        if: matrix.os == 'windows'
        run: |
          npm run make
          npm run package

      - name: Build Electron App for MacOS
        if: matrix.os == 'macos'
        run: |
          npm run make
  release:
    name: Create Release
    needs: build-electron-app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          env.VERSION: ${{ github.ref }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release ${{ github.ref }} for ${{ matrix.os }}
          draft: false
          prerelease: false
      - name: Upload Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/NinjaPlayer-${{ github.ref }}-${{ matrix.os }}.${{ env.FILE_EXTENSION }}
          asset_name: NinjaPlayer-${{ github.ref }}-${{ matrix.os }}.${{ env.FILE_EXTENSION }}
          asset_content_type: application/${{ env.FILE_EXTENSION }}